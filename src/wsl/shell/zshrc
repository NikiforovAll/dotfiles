# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="~/.oh-my-zsh"

# https://github.com/denysdovhan/spaceship-prompt
ZSH_THEME="spaceship"
SPACESHIP_EXIT_CODE_SHOW=true
SPACESHIP_PROMPT_ORDER=(
  user          # Username section
  dir           # Current directory section
  host          # Hostname section
  dotnet        # .NET section
  git           # Git section (git_branch + git_status)
  package       # Package version
  node          # Node.js section
#   docker        # Docker section
  exec_time     # Execution time
  line_sep      # Line break
  battery       # Battery level and status
  exit_code     # Exit code section
  char
)
SPACESHIP_TIME_SHOW=true
SPACESHIP_RPROMPT_ORDER=(
    # dotnet
    docker
    time          # Time stamps section
)

plugins=(
    # Extract any archive file
    extract
    #Keeps track of the last used directory and automatically jumps to it for new shells. Similar to how many terminal emulators does it.
    last-working-dir
    command-not-found
    #Collection of useful zsh aliases https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/common-aliases/common-aliases.plugin.zsh
    common-aliases
    # Copies content of a file into clipboard
    copyfile
    # Auto complete arguments and options for all docker commands.
    # FIX: https://stackoverflow.com/questions/37428133/zsh-docker-plugin-not-working
    docker
    # This is a plugin that helps to encode/decode strings with base64 from the console quickly:
    encode64
    # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git/
    git
    ng
    # _ESC_ twice: Puts sudo in front of the current command, or the last one if the command line is empty.
    sudo
    tmux
    # This plugin makes interaction between the command line and the code editor easier.
    vscode
    # Adds several commands to do web search. (e.g. google, bing, ddg)
    web-search
    # TODO: consider to get rid of it, because fasd could be used as replacement
    # Change directory based on history for example if you previously used (aka fuzzy path expansion)
    # z 
    fasd
    history
    # https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins#jsontools
    jsontools
    # npm - adds autocompletion to npm
    npm
    git-flow
    zsh-autosuggestions
    zsh-syntax-highlighting
    # https://github.com/paulirish/git-open
    git-open
    # fzf-tab
)

source $ZSH/oh-my-zsh.sh
ZSH_DISABLE_COMPFIX=true #skip the verification of insecure directories you can set the variable


## fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[[ -e "$HOME/.fzf_extras" ]] \
    && source "$HOME/.fzf_extras" 

# TODO: can this be replaced with corresponding plugin?
# source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# zsh parameter completion for the dotnet CLI
# https://docs.microsoft.com/en-us/dotnet/core/tools/enable-tab-autocomplete
_dotnet_zsh_complete()
{
  local completions=("$(dotnet complete "$words")")

  reply=( "${(ps:\n:)completions}" )
}
compctl -K _dotnet_zsh_complete dotnet

source_shell_files() {
    # declare -r CURRENT_DIRECTORY="$(pwd)"
    declare -r -a FILES_TO_SOURCE=(
        "shell_aliases"
        "shell_functions"
        "shell_exports"
        "zshrc.local"
    )
    for i in $FILES_TO_SOURCE; do
        file="$HOME/.$i"
        [ -r "$file" ] \
            && . "$file"
    done

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # cd "$CURRENT_DIRECTORY"
}


source_shell_files
unset -f source_shell_files
